// A test program that causes many groups to crash
// Does nonsense  (half of a HSV transformation, with lots of missing steps)
class Program {
  int image[2000000];
  int cols, rows;
  int size;

  void read() {
    callout("pgm_open_for_read", "segovia.pgm");
    cols = callout("pgm_get_cols");
    rows = callout("pgm_get_rows");

    size = cols * rows;
    for i = 0, size {
      image[i] = callout("pgm_get_next_pixel");
    }

    callout("pgm_close");
  }

  void write() {

    callout("pgm_open_for_write", "segovia_philbin.pgm", cols, rows);

    size = cols * rows;
    for i = 0, size {
      callout("pgm_write_next_pixel", image[i]);
    }

    callout("pgm_close");
  }

  void philbin()
  {
    int row, col;
    row = 0;
    col = 0;
    for row = 0, rows {
      for col = 0, cols {
        int min, max;
        int delta;
        int h, s, v;
        int r, g, b;
        r = image[((row * 3 * cols) + (col * 3)) + 0];
        g = image[((row * 3 * cols) + (col * 3)) + 1];
        b = image[((row * 3 * cols) + (col * 3)) + 2];
        h = -1;
        s = 0;
        max = r;
        min = g;
        if(b>=max && b>=max){
          max=b;
        }
        if(g>=max && g>=max){
          max=g;
        }
        if(b<=min && b<=min){
          min=b;
        }
        if(g<=min && g<=min){
          min=g;
        }
        delta = max - min;
        if (delta != 0) {
          h = 60 * (g - b) / delta;
        }
        image[((row * 3 * cols) + (col * 3)) + 0] = h;
      }
    }
  }

  void main() {
    read();
    callout("start_caliper");
    cols = cols/3;
    philbin();
    callout("end_caliper");
    write();
  }
}
  
